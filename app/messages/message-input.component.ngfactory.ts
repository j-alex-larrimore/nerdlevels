/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './message-input.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from './message.service';
import * as import9 from '../node_modules/@angular/forms/src/directives/ng_form.ngfactory';
import * as import10 from '../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import11 from '../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import12 from '../node_modules/@angular/forms/src/directives/validators.ngfactory';
import * as import13 from '../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/forms/src/directives/default_value_accessor';
import * as import16 from '@angular/forms/src/directives/validators';
import * as import17 from '@angular/forms/src/validators';
import * as import18 from '@angular/forms/src/directives/control_value_accessor';
import * as import19 from '@angular/forms/src/directives/ng_model';
import * as import20 from '@angular/forms/src/directives/ng_control';
import * as import21 from '@angular/forms/src/directives/ng_control_status';
import * as import22 from '@angular/forms/src/directives/ng_form';
import * as import23 from '@angular/forms/src/directives/control_container';
export class Wrapper_MessageInputComponent {
  /*private*/ _eventHandler:Function;
  context:import0.MessageInputComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.MessageInputComponent(p0);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_MessageInputComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_MessageInputComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.MessageInputComponent>;
  _MessageInputComponent_0_3:Wrapper_MessageInputComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MessageInputComponent_Host0,renderType_MessageInputComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'app-message-input',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_MessageInputComponent0(this.viewUtils,this,0,this._el_0);
    this._MessageInputComponent_0_3 = new Wrapper_MessageInputComponent(this.injectorGet(import8.MessageService,this.parentIndex));
    this.compView_0.create(this._MessageInputComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._MessageInputComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MessageInputComponent) && (0 === requestNodeIndex))) { return this._MessageInputComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._MessageInputComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const MessageInputComponentNgFactory:import7.ComponentFactory<import0.MessageInputComponent> = new import7.ComponentFactory<import0.MessageInputComponent>('app-message-input',View_MessageInputComponent_Host0,import0.MessageInputComponent);
const styles_MessageInputComponent:any[] = ([] as any[]);
var renderType_MessageInputComponent:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_MessageInputComponent,{});
export class View_MessageInputComponent0 extends import1.AppView<import0.MessageInputComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _NgForm_2_3:import9.Wrapper_NgForm;
  _ControlContainer_2_4:any;
  _NgControlStatusGroup_2_5:import10.Wrapper_NgControlStatusGroup;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _el_9:any;
  _DefaultValueAccessor_9_3:import11.Wrapper_DefaultValueAccessor;
  _RequiredValidator_9_4:import12.Wrapper_RequiredValidator;
  _NG_VALIDATORS_9_5:any[];
  _NG_VALUE_ACCESSOR_9_6:any[];
  _NgModel_9_7:import13.Wrapper_NgModel;
  _NgControl_9_8:any;
  _NgControlStatus_9_9:import10.Wrapper_NgControlStatus;
  _text_10:any;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MessageInputComponent0,renderType_MessageInputComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','col-md-8 col-md-offset-2'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'form',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgForm_2_3 = new import9.Wrapper_NgForm((null as any),(null as any));
    this._ControlContainer_2_4 = this._NgForm_2_3.context;
    this._NgControlStatusGroup_2_5 = new import10.Wrapper_NgControlStatusGroup(this._ControlContainer_2_4);
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'class','form-group'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'label',new import3.InlineArray2(2,'for','content'),(null as any));
    this._text_7 = this.renderer.createText(this._el_6,'Content',(null as any));
    this._text_8 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_4,'input',new import3.InlineArray16(12,'class','form-control','id','content','name','content','ngModel','','required','','type','text'),(null as any));
    this._DefaultValueAccessor_9_3 = new import11.Wrapper_DefaultValueAccessor(this.renderer,new import14.ElementRef(this._el_9));
    this._RequiredValidator_9_4 = new import12.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_9_5 = [this._RequiredValidator_9_4.context];
    this._NG_VALUE_ACCESSOR_9_6 = [this._DefaultValueAccessor_9_3.context];
    this._NgModel_9_7 = new import13.Wrapper_NgModel(this._ControlContainer_2_4,this._NG_VALIDATORS_9_5,(null as any),this._NG_VALUE_ACCESSOR_9_6);
    this._NgControl_9_8 = this._NgModel_9_7.context;
    this._NgControlStatus_9_9 = new import10.Wrapper_NgControlStatus(this._NgControl_9_8);
    this._text_10 = this.renderer.createText(this._el_4,'\n        ',(null as any));
    this._text_11 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_2,'button',new import3.InlineArray4(4,'class','btn btn-primary','type','submit'),(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'Save',(null as any));
    this._text_14 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_15 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_2,new import3.InlineArray8(6,'ngSubmit',(null as any),'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_2));
    this._NgForm_2_3.subscribe(this,this.eventHandler(this.handleEvent_2),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_9,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_9));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._text_15
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.DefaultValueAccessor) && (9 === requestNodeIndex))) { return this._DefaultValueAccessor_9_3.context; }
    if (((token === import16.RequiredValidator) && (9 === requestNodeIndex))) { return this._RequiredValidator_9_4.context; }
    if (((token === import17.NG_VALIDATORS) && (9 === requestNodeIndex))) { return this._NG_VALIDATORS_9_5; }
    if (((token === import18.NG_VALUE_ACCESSOR) && (9 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_9_6; }
    if (((token === import19.NgModel) && (9 === requestNodeIndex))) { return this._NgModel_9_7.context; }
    if (((token === import20.NgControl) && (9 === requestNodeIndex))) { return this._NgControl_9_8; }
    if (((token === import21.NgControlStatus) && (9 === requestNodeIndex))) { return this._NgControlStatus_9_9.context; }
    if (((token === import22.NgForm) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NgForm_2_3.context; }
    if (((token === import23.ControlContainer) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._ControlContainer_2_4; }
    if (((token === import21.NgControlStatusGroup) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 14)))) { return this._NgControlStatusGroup_2_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._NgForm_2_3.ngDoCheck(this,this._el_2,throwOnChange);
    this._NgControlStatusGroup_2_5.ngDoCheck(this,this._el_2,throwOnChange);
    this._DefaultValueAccessor_9_3.ngDoCheck(this,this._el_9,throwOnChange);
    const currVal_9_1_0:any = '';
    this._RequiredValidator_9_4.check_required(currVal_9_1_0,throwOnChange,false);
    this._RequiredValidator_9_4.ngDoCheck(this,this._el_9,throwOnChange);
    const currVal_9_2_0:any = 'content';
    this._NgModel_9_7.check_name(currVal_9_2_0,throwOnChange,false);
    const currVal_9_2_1:any = '';
    this._NgModel_9_7.check_model(currVal_9_2_1,throwOnChange,false);
    this._NgModel_9_7.ngDoCheck(this,this._el_9,throwOnChange);
    this._NgControlStatus_9_9.ngDoCheck(this,this._el_9,throwOnChange);
    this._NgControlStatusGroup_2_5.checkHost(this,this,this._el_2,throwOnChange);
    this._RequiredValidator_9_4.checkHost(this,this,this._el_9,throwOnChange);
    this._NgControlStatus_9_9.checkHost(this,this,this._el_9,throwOnChange);
  }
  destroyInternal():void {
    this._NgModel_9_7.ngOnDestroy();
    this._NgForm_2_3.ngOnDestroy();
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._NgForm_2_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngSubmit')) {
      const pd_sub_0:any = ((<any>this.context.onSubmit(this._NgForm_2_3.context)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_9(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_9_3.handleEvent(eventName,$event) && result);
    return result;
  }
}